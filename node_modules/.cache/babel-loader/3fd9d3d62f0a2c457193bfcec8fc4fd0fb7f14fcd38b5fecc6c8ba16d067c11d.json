{"ast":null,"code":"import React from\"react\";// TODO: import useFormik from formik library\nimport{useFormik}from'formik';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// TODO: add a const called formik assigned to useFormik()\nconst formik=useFormik({initialValues:{emailField:'',pswField:''},onSubmit:values=>{console.log('form',values);alert('Login Sucessful');},validate:values=>{const errors={};if(!values.emailField){errors.emailField='Field Required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)){errors.emailField='Username should be an email';};if(!values.pswField)errors.pswField='Field Required';return errors;}});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"emailField\",type:\"text\",onChange:formik.handleChange,value:formik.values.emailField}),formik.errors.emailField?/*#__PURE__*/_jsxs(\"div\",{id:\"emailError\",style:{color:'red'},children:[formik.errors.emailField,\" \"]}):null,/*#__PURE__*/_jsx(\"div\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"pswField\",type:\"text\",onChange:formik.handleChange,value:formik.values.pswField}),formik.errors.pswField?/*#__PURE__*/_jsx(\"div\",{id:\"pswError\",style:{color:'red'},children:formik.errors.pswField}):null,/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"submitBtn\",children:\"Submit\"})})]})});}export default App;","map":{"version":3,"names":["React","useFormik","jsx","_jsx","jsxs","_jsxs","App","formik","initialValues","emailField","pswField","onSubmit","values","console","log","alert","validate","errors","test","children","handleSubmit","id","type","onChange","handleChange","value","style","color"],"sources":["/Users/c.mad./Desktop/MITXPro/cbmadrig.github.io/ReactApps/01_Formik_Form/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from 'formik'\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  \n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: '',\n    },\n    onSubmit: values => {\n      console.log('form', values);\n      alert('Login Sucessful');\n    },\n\n    validate: values => {\n      const errors = {};\n      if (!values.emailField) {\n      errors.emailField = 'Field Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailField)) {errors.emailField = 'Username should be an email';\n      };\n      if (!values.pswField) errors.pswField = 'Field Required';\n      \n      return errors;\n    }\n  }); \n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input id=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.emailField}/>\n        {formik.errors.emailField ? <div id=\"emailError\" style={{color: 'red'}}>{formik.errors.emailField} </div>: null}\n        <div>Password</div>\n        <input id=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.pswField}/>\n        {formik.errors.pswField ? <div id=\"pswError\" style={{color: 'red'}}>{formik.errors.pswField}</div>: null}\n        \n        <div>\n        <button type=\"submit\" id=\"submitBtn\">Submit</button>\n        </div>\n      </form>  \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA,OAASC,SAAS,KAAQ,QAAQ,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AAEA,KAAM,CAAAC,MAAM,CAAGN,SAAS,CAAC,CACvBO,aAAa,CAAE,CACbC,UAAU,CAAE,EAAE,CACdC,QAAQ,CAAE,EACZ,CAAC,CACDC,QAAQ,CAAEC,MAAM,EAAI,CAClBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEF,MAAM,CAAC,CAC3BG,KAAK,CAAC,iBAAiB,CAAC,CAC1B,CAAC,CAEDC,QAAQ,CAAEJ,MAAM,EAAI,CAClB,KAAM,CAAAK,MAAM,CAAG,CAAC,CAAC,CACjB,GAAI,CAACL,MAAM,CAACH,UAAU,CAAE,CACxBQ,MAAM,CAACR,UAAU,CAAG,gBAAgB,CACpC,CAAC,IAAM,IAAI,CAAC,2CAA2C,CAACS,IAAI,CAACN,MAAM,CAACH,UAAU,CAAC,CAAE,CAACQ,MAAM,CAACR,UAAU,CAAG,6BAA6B,CACnI,CAAC,CACD,GAAI,CAACG,MAAM,CAACF,QAAQ,CAAEO,MAAM,CAACP,QAAQ,CAAG,gBAAgB,CAExD,MAAO,CAAAO,MAAM,CACf,CACF,CAAC,CAAC,CAEF,mBACEd,IAAA,QAAAgB,QAAA,cACEd,KAAA,SAAMM,QAAQ,CAAEJ,MAAM,CAACa,YAAa,CAAAD,QAAA,eAClChB,IAAA,QAAAgB,QAAA,CAAK,OAAK,CAAK,CAAC,cAChBhB,IAAA,UAAOkB,EAAE,CAAC,YAAY,CAACC,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAEhB,MAAM,CAACiB,YAAa,CAACC,KAAK,CAAElB,MAAM,CAACK,MAAM,CAACH,UAAW,CAAC,CAAC,CACnGF,MAAM,CAACU,MAAM,CAACR,UAAU,cAAGJ,KAAA,QAAKgB,EAAE,CAAC,YAAY,CAACK,KAAK,CAAE,CAACC,KAAK,CAAE,KAAK,CAAE,CAAAR,QAAA,EAAEZ,MAAM,CAACU,MAAM,CAACR,UAAU,CAAC,GAAC,EAAK,CAAC,CAAE,IAAI,cAC/GN,IAAA,QAAAgB,QAAA,CAAK,UAAQ,CAAK,CAAC,cACnBhB,IAAA,UAAOkB,EAAE,CAAC,UAAU,CAACC,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAEhB,MAAM,CAACiB,YAAa,CAACC,KAAK,CAAElB,MAAM,CAACK,MAAM,CAACF,QAAS,CAAC,CAAC,CAC/FH,MAAM,CAACU,MAAM,CAACP,QAAQ,cAAGP,IAAA,QAAKkB,EAAE,CAAC,UAAU,CAACK,KAAK,CAAE,CAACC,KAAK,CAAE,KAAK,CAAE,CAAAR,QAAA,CAAEZ,MAAM,CAACU,MAAM,CAACP,QAAQ,CAAM,CAAC,CAAE,IAAI,cAExGP,IAAA,QAAAgB,QAAA,cACAhB,IAAA,WAAQmB,IAAI,CAAC,QAAQ,CAACD,EAAE,CAAC,WAAW,CAAAF,QAAA,CAAC,QAAM,CAAQ,CAAC,CAC/C,CAAC,EACF,CAAC,CACJ,CAAC,CAEV,CAEA,cAAe,CAAAb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}